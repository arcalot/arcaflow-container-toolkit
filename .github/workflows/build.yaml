name: Continuous Integration
on:
  push:
    branches:
      - "**"
    tags:
      - "**"
  pull_request:
env:
  go_version: 1.21.6
jobs:
  golangci-lint:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Set up Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5
        with:
          go-version: ${{ env.go_version }}
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@3cfe3a4abbb849e10058ce4af15d205b6da42804 # v4
        with:
          version: v1.55.2

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Set up Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5
        with:
          go-version: ${{ env.go_version }}

      - name: Set up gotestfmt
        uses: gotesttools/gotestfmt-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up limgo
        uses: GoTestTools/limgo-action@fe8392ce7f182c119ae7c27faa6d63170825e689 # v1.0.1
        with:
          version: "v1.0.0"
          install-only: true

      - name: Setup go mockgen
        run: go install go.uber.org/mock/mockgen@v0.4.0

      - name: generate mocks
        run: go generate ./...

      - name: run tests
        run: |
          set -euo pipefail
          go test -coverprofile=test.cov -json -v ./... 2>&1 | tee /tmp/gotest.log | gotestfmt

      - name: upload test log
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4
        if: always()
        with:
          name: test-log
          path: /tmp/gotest.log
          if-no-files-found: error

      - name: Calculate test coverage
        run: |
          cat .limgo.json
          limgo -coverfile=test.cov -config=.limgo.json -outfmt=md -outfile=limgo_cov.md
          cat limgo_cov.md >> $GITHUB_STEP_SUMMARY

      - name: upload coverage results
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4
        with:
          name: coverage
          path: limgo_cov.md
          if-no-files-found: error

  release:
    name: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    needs:
      - golangci-lint
      - test
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5
        with:
          go-version: ${{ env.go_version }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Release if tagged, else Build
        uses: goreleaser/goreleaser-action@7ec5c2b0c6cdda6e8bbb49444bc797dd33d74dd8 # v5
        with:
          distribution: goreleaser
          version: latest
          args: ${{ env.GR_CMD }} ${{ env.GR_ARGS }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GR_CMD: ${{ startsWith(github.event.ref, 'refs/tags/') && 'release' || 'build' }}
          GR_ARGS: ${{ startsWith(github.event.ref, 'refs/tags/') && '--clean' || '--snapshot' }}

      - name: Upload artifacts
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4
        with:
          name: binaries
          path: dist
